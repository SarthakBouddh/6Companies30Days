/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    class Pair{
    int sum;
    boolean isBST;
    int max;
    int min;

    public Pair(int sum , boolean isBST, int max , int min){
        this.sum = sum;
        this.isBST = isBST;
        this.max = max;
        this.min = min;
      }
    }

   int maxSum = 0;


    public int maxSumBST(TreeNode root) {
        maxSumBSTs(root);
        return maxSum;
    }
    public Pair maxSumBSTs(TreeNode root){
        if(root == null){
            return new Pair(0, true, Integer.MIN_VALUE, Integer.MAX_VALUE);
        }

        Pair left = maxSumBSTs(root.left);
        Pair right = maxSumBSTs(root.right);

        if(left.isBST && right.isBST && root.val>left.max && root.val < right.min){
            maxSum = Math.max(root.val + left.sum + right.sum , maxSum);
            return new Pair(root.val + left.sum + right.sum , true , Math.max(root.val , right.max) , Math.min(root.val , left.min));
        }else{
            return new Pair(0 , false , 0 , 0);
        }
    }
    
}

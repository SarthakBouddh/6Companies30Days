class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        long[][] matrix = new long[n][n];
        for(int i=0 ; i<n ; i++){
            for(int j=0 ; j<n ; j++){
                if(i==j){
                    matrix[i][j] = 0L;
                }else{
                    matrix[i][j] = Long.MAX_VALUE / 2;
                }
            }
        }

        for(int[] it : edges){
            int u = it[0];
            int v = it[1];
            int wt = it[2];
            
            matrix[u][v] = wt;
            matrix[v][u] = wt;
         }
        
        for(int k=0 ; k<n ; k++){
            for(int i=0 ; i<n ;i++){
                for(int j=0 ; j<n ; j++){
                    long Newt = matrix[i][k] + matrix[k][j];
                    if( Newt < matrix[i][j]){
                        matrix[i][j] = Newt;
                    }
                }
            }
        }
        
        int minirechable = Integer.MAX_VALUE;
        int result = -1;
        for(int i=0 ; i<n ; i++){
            int reachable = 0;
            for(int j=0 ; j<n ; j++){
                if(matrix[i][j]<=distanceThreshold){
                    reachable++;
                }
            }
            if(reachable<=minirechable){
                    minirechable = reachable;
                    result = i;
            }
        }
        return result;
    }
}
